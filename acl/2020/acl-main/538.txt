LogicalFactChecker: Leveraging Logical Operations for Fact Checking with Graph Module Network | Wanjun Zhong | verifying the correctness of a textual statement requires not only semantic reasoning about the meaning of words , but also symbolic reasoning about logical operations like count , superlative , aggregation , etc. in this work , we propose logicalfactchecker , a neural network approach capable of leveraging logical operations for fact checking. it achieves the state-of-the-art performance on tabfact , a large-scale , benchmark dataset built for verifying a textual statement with semi-structured tables. this is achieved by a graph module network built upon the transformer-based architecture. with a textual statement and a table as the input , logicalfactchecker automatically derives a program \( a.k.a. logical form \) of the statement in a semantic parsing manner. a heterogeneous graph is then constructed to capture not only the structures of the table and the program , but also the connections between inputs with different modalities. such a graph reveals the related contexts of each word in the statement , the table and the program. the graph is used to obtain graph-enhanced contextual representations of words in transformer-based architecture. after that , a program-driven module network is further introduced to exploit the hierarchical structure of the program , where semantic compositionality is dynamically modeled along the program structure with a set of function-specific modules. ablation experiments suggest that both the heterogeneous graph and the module network are important to obtain strong results.
