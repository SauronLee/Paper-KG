Programming in Natural Language with fuSE: Synthesizing Methods from Spoken Utterances Using Deep Natural Language Understanding | Sebastian Weigelt | the key to effortless end-user programming is natural language. we examine how to teach intelligent systems new functions , expressed in natural language. as a first step , we collected 3168 samples of teaching efforts in plain english. then we built fuse , a novel system that translates english function descriptions into code. our approach is three-tiered and each task is evaluated separately. we first classify whether an intent to teach new functionality is present in the utterance \( accuracy: 97.7% using bert \) . then we analyze the linguistic structure and construct a semantic model \( accuracy: 97.6% using a bilstm \) . finally , we synthesize the signature of the method , map the intermediate steps \( instructions in the method body \) to api calls and inject control structures \( f1: 67.0% with information retrieval and knowledge-based methods \) . in an end-to-end evaluation on an unseen dataset fuse synthesized 84.6% of the method signatures and 79.2% of the api calls correctly.
